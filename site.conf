{
    -- Used for generated hostnames, e.g. freifunk-abcdef123456. (optional)
    hostname_prefix = 'ff-ibk-',

    -- Name of the community.
    site_name = 'Freifunk Innsbruck',

    -- Shorthand of the community.
    site_code = 'ibk',

    -- 32 bytes of random data, encoded in hexadecimal
    -- This data must be unique among all sites and domains!
    -- Can be generated using: echo $(hexdump -v -n 32 -e '1/1 "%02x"' </dev/urandom)
    domain_seed = '5f860eb43113639b76ea66fbb819ce3e4534d102d9611ea029b4f1c2c8c6ce71',

    -- Prefixes used within the mesh.
    -- prefix6 is required, prefix4 can be omitted if next_node.ip4
    -- is not set.
    prefix4 = '10.13.144.0/20',
    prefix6 = 'fd13:b4dc:4b1e::/64',

    -- Timezone of your community.
    -- See https://openwrt.org/docs/guide-user/base-system/system_configuration#time_zones
    timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',

    -- List of NTP servers in your community.
    -- Must be reachable using IPv6!
    ntp_servers = {
               '0.openwrt.pool.ntp.org',
               '1.openwrt.pool.ntp.org',
               '2.openwrt.pool.ntp.org',
               '3.openwrt.pool.ntp.org',
    },
    opkg = {
        extra = {
            gluon = 'http://packages.freifunk-innsbruck.at/modules/gluon-%GS-%GR/%S',
        },
    },

    -- Wireless regulatory domain of your community.
    regdom = 'AT',

    -- Wireless configuration for 2.4 GHz interfaces.
    wifi24 = {
        -- Wireless channel.
        channel = 11,

        -- ESSID used for client network.
        ap = {
          ssid = 'freifunk-innsbruck.at',
        },

        ibss = {
            ssid = 'wifimesh-ibk',
            bssid = 'B2:CA:FF:EE:BA:BE',
            mcast_rate = 12000,
        },
    },

    -- Wireless configuration for 5 GHz interfaces.
    -- This should be equal to the 2.4 GHz variant, except
    -- for channel.
    wifi5 = {
        channel = 44,
        ap = {
            ssid = 'freifunk-innsbruck.at',
        },
        ibss = {
            ssid = 'wifimesh-ibk',
            bssid = '02:44:CA:FF:EE:EE',
            mcast_rate = 12000,
        },
    },

    -- The next node feature allows clients to always reach the node it is
    -- connected to using a known IP address.
    next_node = {
        ip4 = '10.13.144.1',
        ip6 = 'fd13:b4dc:4b1e::1',
        -- anycast MAC of all nodes
        mac = '02:00:0a:25:00:01',
    },

    -- Options specific to routing protocols (optional)
    mesh = {
        -- Options specific to the batman-adv routing protocol (optional)
        batman_adv = {
            -- Gateway selection class (optional)
            -- The default class 20 is based on the link quality (TQ) only,
            -- class 1 is calculated from both the TQ and the announced bandwidth
            gw_sel_class = 20,
        },
        vxlan = true,
    },

    mesh_vpn = {
        enabled = true,
        mtu = 1406,

        fastd = {
            -- Refer to https://fastd.readthedocs.io/en/latest/ to better understand
            -- what these options do.

            -- List of crypto-methods to use.
            methods = {'salsa2012+umac'},
            -- configurable = true,
            -- syslog_level = 'warn',

            groups = {
                backbone = {
                    -- Limit number of connected peers to reduce bandwidth.
                    limit = 2,

                    -- List of peers.
                    peers = {
                        ibk1 = {
                            key = '1b2b2d5b7633d91bf3f9ac4b3c7995eb672b5007f495989a21a3e400ef4bb246',
                            remotes = {'ipv4 "vpn01.freifunk-innsbruck.at" port 10000'},
                        },
                        ibk2 = {
                            key = 'c35de5e26358bc63536cf1e5aa5dd52b871e4aca98bb536ee2edfef23e188ee1',
                            remotes = {'ipv4 "vpn02.freifunk-innsbruck.at" port 10000'},
                        },
                    },
                },
            },

            bandwidth_limit = {
                enabled = false,

                -- Default upload limit (kbit/s).
                egress = 400,

                -- Default download limit (kbit/s).
                ingress = 6000,
            },
        },
    },

    autoupdater = {
        -- Default branch. Don't forget to set GLUON_BRANCH when building!
        branch = 'stable',

        -- List of branches. You may define multiple branches.
        branches = {
            stable = {
                name = 'stable',

                -- List of mirrors to fetch images from. IPv6 required!
                mirrors = {
                    'http://updates01.freifunk-innsbruck.at/stable/sysupgrade',
                },

                -- Number of good signatures required.
                -- Have multiple maintainers sign your build and only
                -- accept it when a sufficient number of them have
                -- signed it.
                good_signatures = 1,

                -- List of public keys of maintainers.
                pubkeys = {
                    '52eee3581cd8f836ca300c9d1abb96f4d27dc3afaa45003a6de7f7c0dec0b512', -- Wingdu (Freifunk Innsbruck)
                    'a32c7a6b29859916ceb3731e170773ef75be27a9b945fab428afc75886dedfb5', -- Gwrx (Freifunk Innsbruck)
                },
            },

            nightly = {
                name = 'nightly',
                mirrors = {
                    'http://updates01.freifunk-innsbruck.at/nightly/sysupgrade',
                },
                good_signatures = 1,
                pubkeys = {
                    '52eee3581cd8f836ca300c9d1abb96f4d27dc3afaa45003a6de7f7c0dec0b512', -- Wingdu (Freifunk Innsbruck)
                    'a32c7a6b29859916ceb3731e170773ef75be27a9b945fab428afc75886dedfb5', -- Gwrx (Freifunk Innsbruck)
                },
            },
        },
    },

    -- enable BATMAN on WAN interface by default (see gluon-luci-portconfig for webinterface)
    mesh_on_wan = false,
}
